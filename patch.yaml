commit_message: "docs(flowchart): Fix Mermaid syntax in ExecutionPlan flowchart"
rationale: |
  Questo commit corregge un errore di sintassi nel diagramma di flusso `04_execution_plan_generation.md`. I caratteri speciali (`[]`) nel testo di un nodo non erano stati correttamente escapati, causando un errore di parsing da parte di Mermaid.

  La correzione racchiude il testo del nodo problematico tra doppi apici, come richiesto dalla sintassi di Mermaid per trattare il contenuto come una stringa letterale. Questo risolve l'errore di rendering e ripristina la corretta visualizzazione della documentazione.
patches:
  - file: "docs/flowcharts/04_execution_plan_generation.md"
    content: |
      # Livello 3: Flusso di Generazione dell'ExecutionPlan (Regista)

      Questo diagramma descrive l'algoritmo di alto livello che il "Regista" (backend) usa per trasformare la definizione di un allenamento in un `ExecutionPlan` sequenziale, pronto per essere eseguito dal "Player" (frontend).

      ```mermaid
      graph TD
          subgraph Regista / planGenerator
              A(Start: Riceve Definizione Allenamento);
              B["Inizializza ExecutionPlan = []"];
              
              A --> B;
              B --> C{Loop: Per ogni 'item' nella Definizione};
              
              C --> D{item.type === 'EXERCISE' ?};
              
              D -- No (è un Riposo) --> F[Genera singolo Frame 'REST'];
              F --> G[Accoda Frame all'ExecutionPlan];
              
              D -- Sì --> E["Sub-Process: Genera Frame Esercizio(item)<br><i>(logica per serie, ripetizioni, fasi, etc.)</i>"];
              E --> H[Accoda i Frame restituiti<br>all'ExecutionPlan];
              
              G --> I{Ancora item?};
              H --> I;

              I -- Sì --> C;
              I -- No --> J(End: Restituisce ExecutionPlan);
          end
      ```