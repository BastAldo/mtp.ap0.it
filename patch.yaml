commit_message: "docs: Aggiungere guida su workflow e uso del patcher"
rationale: |
  Per garantire coerenza tra tutte le istanze dell'architetto, questo commit introduce un documento fondamentale: `workflow_e_strumenti.md`.
  Questo file spiega il funzionamento dello script `patcher.py`, con un focus specifico sulla gestione delle operazioni sui file.
  Chiarisce che le operazioni distruttive (come l'eliminazione) non vengono eseguite direttamente, ma vengono gestite tramite la sezione `informational_messages`, che istruisce l'utente sui comandi manuali da eseguire.
  Questa documentazione è cruciale per prevenire errori e standardizzare il nostro processo di lavoro.
patches:
  - file: "docs/workflow_e_strumenti.md"
    actions:
      - type: "CREATE"
        content: |
          # Guida al Workflow e agli Strumenti

          Questo documento è la fonte di verità per il nostro processo di sviluppo e per l'utilizzo degli strumenti interni, in particolare lo script `patcher.py`.

          ## Il Ruolo di `patcher.py`

          Lo script `patcher.py` è il nostro unico meccanismo per applicare modifiche al repository. Applica una serie di operazioni definite in un file `patch.yaml`.

          ## Struttura del `patch.yaml`

          Il file YAML ha due sezioni principali: `patches` e `informational_messages`.

          ### 1. La Sezione `patches`

          Questa sezione gestisce la creazione e la modifica dei contenuti dei file. Le azioni supportate sono:

          * `CREATE`: Crea un nuovo file con il contenuto specificato.
          * `REPLACE`: Sostituisce un blocco di linee in un file esistente.
          * `ADD_AFTER`: Inserisce un blocco di codice dopo una linea specifica.

          **IMPORTANTE**: Lo script **non supporta un'azione di eliminazione (`DELETE`)** diretta.

          ### 2. La Sezione `informational_messages`

          Questa sezione è il metodo corretto per gestire operazioni che esulano dalla modifica dei contenuti, come l'eliminazione di file e directory.

          Lo script non esegue i comandi in questa sezione. Invece, li **visualizza** all'utente come istruzioni da eseguire manualmente dopo l'applicazione del patch.

          #### Esempio Corretto per l'Eliminazione

          Per eliminare la directory `src`, non si deve tentare un'azione non supportata. L'approccio corretto è:

          ```yaml
          informational_messages:
            - "echo 'Eseguire il seguente comando per la pulizia:'"
            - "rm -rf src/"
          ```

          Questo garantisce che l'intento sia chiaro e che l'operazione venga eseguita in modo sicuro dall'utente.