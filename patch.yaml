commit_message: "docs: Establish project documentation structure"
rationale: |
  This foundational commit establishes a new, structured documentation system within a `docs/` directory, as agreed upon. This creates a single source of truth for the project's functional requirements, architectural decisions, and visual style, ensuring clarity and alignment before proceeding with further development.

  The new structure includes:
  1.  `docs/01_FUNCTIONALITY.md`: Contains updated specifications and ASCII mockups for key application views, clearly illustrating the difference between time-based and rep-based exercises.
  2.  `docs/02_ARCHITECTURE.md`: Introduces a lightweight Architecture Decision Record (ADR) system to document key technical choices and their rationale.
  3.  `docs/03_STYLE_GUIDE.md`: Provides a structured template for a project style guide, covering colors, typography, and components.

  This commit also removes the old, unstructured `functionality_spec.md` and `design_and_visual.md` files to avoid redundancy and confusion.
patches:
  - file: docs/01_FUNCTIONALITY.md
    content: |
      # Specifiche Funzionali

      ## 1. Obiettivo dell'Applicazione

      Creare un'applicazione web per la gestione di sessioni di allenamento personalizzate. L'utente pu√≤ selezionare una serie di esercizi e avviare un trainer che lo guida attraverso set, tempi di lavoro e tempi di riposo.

      ## 2. Concetti Chiave

      ### Tipi di Esercizi

      L'applicazione deve supportare due tipi di esercizi:

      1.  **A Tempo (`type: 'time'`)**:
          - L'utente esegue l'esercizio per una durata predefinita (`defaultDuration`).
          - Il trainer mostra un timer con un conto alla rovescia.
          - Al termine del tempo, il trainer passa automaticamente al riposo o al set successivo.

      2.  **A Ripetizioni (`type: 'reps'`)**:
          - L'utente esegue un numero predefinito di ripetizioni (`defaultReps`).
          - Il trainer mostra il numero di ripetizioni da completare. Non c'√® un timer durante il set.
          - L'utente deve segnalare manualmente il completamento del set cliccando su un apposito pulsante ("Set Completato").
          - Una volta premuto il pulsante, parte il timer per il riposo (`defaultRest`).

      ## 3. Mockup ASCII delle Viste

      ### Vista 1: Configurazione

      L'utente seleziona gli esercizi per la sessione.

      ```
      +-----------------------------------------+
      |         Workout Configurator            |
      +-----------------------------------------+
      |                                         |
      |  [x] Push-up                            |
      |  [ ] Squat a Corpo Libero               |
      |  [x] Plank                              |
      |  [x] Calf Raises (1 Gamba)              |
      |                                         |
      |                                         |
      +-----------------------------------------+
      |         [ Start Training ]              |
      +-----------------------------------------+
      ```

      ### Vista 2: Trainer (Esercizio a Tempo)

      Durante un esercizio misurato in secondi.

      ```
      +-----------------------------------------+
      |  Plank                        Series 1/3|
      +-----------------------------------------+
      |                                         |
      |                   47                    |
      |                  Work!                  |
      |                                         |
      +-----------------------------------------+
      |              [ Pause ]                  |
      +-----------------------------------------+
      ```

      ### Vista 3: Trainer (Esercizio a Ripetizioni)

      Durante un esercizio misurato in ripetizioni. Notare il pulsante diverso.

      ```
      +-----------------------------------------+
      |  Squat a Corpo Libero         Series 1/3|
      +-----------------------------------------+
      |                                         |
      |                15 Reps                  |
      |                  Work!                  |
      |                                         |
      +-----------------------------------------+
      |         [ Set Completato ]              |
      +-----------------------------------------+
      ```

      ### Vista 4: Trainer (Fase di Riposo)

      Durante il timer di riposo, tra un set e l'altro.

      ```
      +-----------------------------------------+
      |  Squat a Corpo Libero         Series 2/3|
      +-----------------------------------------+
      |                                         |
      |                   51                    |
      |                   Rest                  |
      |                                         |
      +-----------------------------------------+
      |              [ Pause ]                  |
      +-----------------------------------------+
      ```
  - file: docs/02_ARCHITECTURE.md
    content: |
      # Architecture Decision Records (ADR)

      Questo documento √® il nostro "diario tecnico". Registra le decisioni architetturali importanti prese durante lo sviluppo del progetto.

      ## Cos'√® un ADR?

      Un ADR √® un breve documento di testo che descrive una scelta architetturale. Ogni ADR ha un formato standard per spiegare il contesto della decisione, la decisione stessa e le sue conseguenze.

      Lo scopo √® avere una cronologia chiara del *perch√©* il software √® costruito in un certo modo. Questo aiuta i futuri sviluppatori (o future istanze dell'AI) a comprendere le scelte passate.

      Un ADR, una volta scritto, √® immutabile. Se una decisione cambia, non si modifica il vecchio ADR, ma se ne scrive uno nuovo che "supera" quello precedente.

      ## Formato ADR

      * **Titolo**: Un breve riassunto della decisione.
      * **Contesto**: Il problema o la situazione che richiede una decisione.
      * **Decisione**: La scelta tecnica che √® stata fatta.
      * **Conseguenze**: I risultati (positivi e negativi) di questa decisione.

      ---

      ### ADR-001: Adozione di una Struttura di Documentazione Formale

      * **Contesto**: Il progetto stava evolvendo rapidamente, con nuove richieste funzionali (es. esercizi a reps) e di design che non erano catturate in modo strutturato. I file di specifiche iniziali erano diventati insufficienti. C'era il rischio di disallineamento e di dover "reinventare la ruota".
      * **Decisione**: Abbiamo deciso di creare una cartella `/docs` per contenere la documentazione ufficiale del progetto, suddivisa in tre file principali: `01_FUNCTIONALITY.md` (per specifiche e mockup), `02_ARCHITECTURE.md` (per gli ADR), e `03_STYLE_GUIDE.md` (per le regole di design).
      * **Conseguenze**:
          * **Positivo**: Abbiamo ora una singola fonte di verit√† per il progetto, migliorando la chiarezza e l'allineamento.
          * **Positivo**: Sar√† pi√π facile per chiunque (umano o AI) comprendere lo stato e la storia del progetto.
          * **Negativo/Sforzo**: Richiede uno sforzo disciplinato per mantenere la documentazione aggiornata man mano che il progetto evolve.
  - file: docs/03_STYLE_GUIDE.md
    content: |
      # Guida di Stile

      Questo documento definisce l'identit√† visiva dell'applicazione. Tutte le componenti UI devono aderire a queste regole per garantire coerenza e una User Experience di qualit√†.

      ## 1. Color Palette

      * **Primary**: `#XXXXXX` (Usato per bottoni primari, link e accenti principali)
      * **Secondary**: `#XXXXXX` (Usato per elementi di supporto)
      * **Background**: `#XXXXXX` (Colore di sfondo principale dell'app)
      * **Surface**: `#XXXXXX` (Colore per le superfici dei contenitori, come le card)
      * **Text Primary**: `#XXXXXX` (Colore del testo principale)
      * **Text Secondary**: `#XXXXXX` (Colore del testo secondario, meno importante)
      * **Success**: `#XXXXXX` (Usato per messaggi di successo)
      * **Error**: `#XXXXXX` (Usato per messaggi di errore)

      ## 2. Typography

      * **Font Family**: `'Roboto', sans-serif` (Esempio)
      * **Heading 1 (h1)**: `32px` Bold
      * **Heading 2 (h2)**: `24px` Bold
      * **Body Text**: `16px` Regular
      * **Small Text / Labels**: `14px` Regular

      ## 3. Spacing

      Usare un sistema di spaziatura basato su un multiplo di 8px per mantenere un ritmo verticale e orizzontale consistente.

      * `space-xs`: `4px`
      * `space-sm`: `8px`
      * `space-md`: `16px`
      * `space-lg`: `24px`
      * `space-xl`: `32px`

      ## 4. Componenti

      ### Bottone Primario

      * `background-color`: `Primary`
      * `color`: `#FFFFFF`
      * `padding`: `space-md space-lg`
      * `border-radius`: `4px`
      * `box-shadow`: `(valore ombra)`

      ### Bottone Secondario

      * `background-color`: `transparent`
      * `color`: `Primary`
      * `border`: `1px solid Primary`
      * `padding`: `space-md space-lg`
      * `border-radius`: `4px`
commands:
  - echo "‚úÖ Creata la nuova struttura di documentazione in 'docs/'."
  - mkdir -p docs
  - echo "üßπ Rimozione dei vecchi file di specifica..."
  - rm functionality_spec.md design_and_visual.md
  - echo "Operazione completata. La nostra nuova 'fonte di verit√†' √® pronta."
  - echo "Azione richiesta: La prego di rivedere i nuovi documenti, in particolare i mockup in 'docs/01_FUNCTIONALITY.md'."