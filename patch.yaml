commit_message: "docs: Add ASCII mockups to functionality specification"
rationale: |
  This commit enhances the primary documentation file (`01_FUNCTIONALITY.md`) by adding low-fidelity ASCII mockups for each major view and component.

  These visual aids provide clear context to the textual descriptions, reducing ambiguity and ensuring alignment on the UI/UX before implementation begins.
patches:
  - file: docs/01_FUNCTIONALITY.md
    content: |
      # App Functionality Specification

      This document outlines the core features and operational logic of the "Mio Trainer Personale" web application.

      ## 1. Core Concept

      The application is a single-page app (SPA) designed for users to schedule, execute, and track workouts. All user data is persisted locally in the browser's `localStorage`.

      ## 2. Main Views

      The application operates using three primary, mutually exclusive views: `Calendar`, `Trainer`, and `Debriefing`.

      ### 2.1. Calendar View

      -   **Function:** The main dashboard and default view of the application.
      -   **Display:** It presents a weekly grid layout.
      -   **Navigation:** Users can navigate to the previous or next week.
      -   **Day Cells:** Each cell represents a day and displays a summary of the number of exercises scheduled for that day. A "START" button is enabled if one or more exercises are scheduled.
      -   **Interaction:** Clicking a day cell (but not the "START" button) opens the Workout Editor modal for that specific date.

      ```plaintext
      +-------------------------------------------------------------------------+
      |  <- PREV WEEK         WEEK OF 2025-06-30         NEXT WEEK ->            |
      +-------------------------------------------------------------------------+
      | MONDAY 30      | TUESDAY 01     | WEDNESDAY 02   | THURSDAY 03    | ...  |
      |----------------|----------------|----------------|----------------|------|
      | 3 Exercises    | 0 Exercises    | 2 Exercises    | (No Workout)   |      |
      |                |                |                |                |      |
      | [   START   ]  |                | [   START   ]  |                |      |
      +-------------------------------------------------------------------------+
      ```

      ### 2.2. Workout Editor (Modal System)

      The editor is a two-stage modal system for managing a day's workout routine.

      -   **Daily Workout Modal:**
          -   Triggered by clicking a day cell.
          -   Displays a list of exercises currently scheduled for the selected date.
          -   Allows **removal** of any exercise from the list.
          -   Contains an "Add Exercise" button to open the Exercise Library modal.
      -   **Exercise Library Modal:**
          -   Triggered by the "Add Exercise" button.
          -   Displays a complete list of all available exercises defined in `workouts.js`.
          -   Allows **selection** of an exercise to add to the current day's routine.

      ```plaintext
      // Stage 1: Daily Workout Modal appears over the Calendar
      +----------------------------------+
      | WORKOUT - MONDAY 30              |
      |----------------------------------|
      | - Squat (3x10)         [Remove]  |
      | - Push-ups (3x12)      [Remove]  |
      | - Plank (3x60s)        [Remove]  |
      |                                  |
      |            [Add Exercise]        |
      +----------------------------------+

      // Stage 2: User clicks [Add Exercise], a new modal replaces the first
      +----------------------------------+
      | EXERCISE LIBRARY                 |
      |----------------------------------|
      | - Bench Press          [Add]     |
      | - Deadlift             [Add]     |
      | - Lunges               [Add]     |
      | - Bicep Curls          [Add]     |
      | ... (scrollable) ...             |
      |                        [Close]   |
      +----------------------------------+
      ```

      ### 2.3. Interactive Trainer View

      -   **Function:** An interactive, state-driven interface that guides the user through a scheduled workout in real-time.
      -   **Activation:** Triggered by clicking the "START" button on a day cell in the calendar.

      ```plaintext
      // State: Preparing
      +-----------------------------------------+
      |  ** SQUAT ** |
      |  SERIES 1 / 3                           |
      |-----------------------------------------|
      |                                         |
      |                PREPARING                |
      |                   03                    |
      |                                         |
      |-----------------------------------------|
      |  Get ready for the first set.           |
      |  [   (Controls Disabled)   ]            |
      +-----------------------------------------+

      // State: Action (Reps-based)
      +-----------------------------------------+
      |  ** SQUAT ** |
      |  SERIES 1 / 3   |   REP 1 / 10          |
      |-----------------------------------------|
      |                                         |
      |                    UP                   |
      |                   2s                    |
      |                                         |
      |-----------------------------------------|
      |  Lower your body with control.          |
      |  [           PAUSE           ]          |
      +-----------------------------------------+
      ```

      #### Trainer State Machine & Flow

      The trainer operates as a state machine. The primary user flow is as follows:

      1.  **Ready (`ready`):** The trainer displays the current exercise and series number. Awaits user input to begin.
      2.  **Announcing (`announcing`):** Before every new phase, this 0.75-second state is activated. It displays the name of the upcoming phase (e.g., "UP", "REST") with a flashing visual effect and an audio tick to alert the user.
      3.  **Preparing (`preparing`):** A 3-second countdown to prepare the user for the first series of an exercise.
      4.  **Action (`action`):** The core execution phase.
          -   For **`reps`**-based exercises, the trainer automatically cycles through timed phases as defined by the exercise's `tempo` object (e.g., `up`, `hold`, `down`), each with its own countdown.
          -   For **`time`**-based exercises, a single countdown for the specified `duration` is run.
      5.  **Paused (`paused`):** The user can pause the workout at any time during the `action` state. The timer stops. The user must click "RESUME" to continue.
      6.  **Rest (`rest`):** After a set is completed, the trainer enters a rest period. A countdown for the specified `rest` duration is shown.
      7.  **Advancement:** After a rest period or set completion, the system automatically determines whether to proceed to the next series of the same exercise or to the next exercise in the routine.
      8.  **Finished (`finished`):** Once all exercises in the routine are complete, the trainer automatically transitions to the Debriefing View.

      ### 2.4. Debriefing View

      -   **Activation:** Appears automatically when a workout is completed or manually terminated.
      -   **Content:**
          -   **Summary:** Displays a list of all exercises completed during the session.
          -   **Text Report:** Generates a pre-formatted, multi-line string summarizing the workout, ready for sharing.
      -   **Actions:**
          -   **Copy for Coach:** Copies the text report to the user's clipboard.
          -   **Return to Calendar:** Switches the view back to the main Calendar.

      ```plaintext
      +-----------------------------------------+
      |  WORKOUT COMPLETED!                     |
      |-----------------------------------------|
      |  Summary:                               |
      |   - Squat: 3 series completed           |
      |   - Push-ups: 3 series completed        |
      |   - Plank: 3 series completed           |
      |                                         |
      |  +-----------------------------------+  |
      |  | Workout Report:                   |  |
      |  | Mon Jun 30 2025                   |  |
      |  | * Squat: 3 sets                   |  |
      |  | * Push-ups: 3 sets                |  |
      |  | * Plank: 3 sets                   |  |
      |  +-----------------------------------+  |
      |                                         |
      |  [ Copy for Coach ] [Return to Calendar] |
      +-----------------------------------------+
      ```
commands:
  - "echo 'Documentation file 01_FUNCTIONALITY.md has been updated with ASCII mockups.'"