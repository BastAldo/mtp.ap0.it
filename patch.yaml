commit_message: "chore(debug): Aggiungere log di versione per diagnosi cache"
rationale: |
  Per escludere definitivamente problemi di caching che potrebbero impedire la visualizzazione delle modifiche recenti, questo commit aggiunge un'unica riga di codice nel punto di ingresso dell'applicazione (`src/main.js`).

  Viene inserito un `console.log` con un numero di versione univoco ("MTP Build: 2.0.0"). La sua presenza nella console del browser confermerà che l'ultima versione del codice è stata correttamente caricata ed eseguita, permettendoci di concentrare il debug sulla logica dell'applicazione piuttosto che sull'infrastruttura di deployment.
patches:
  - file: src/main.js
    content: |
      console.log('%cMTP Build: 2.0.0 - Esecuzione confermata.', 'color: #lime; font-size: 1.2em; font-weight: bold;');
      import store from './modules/store.js';
      import { init as initCalendarView } from './views/CalendarView.js';
      import { init as initTrainerView } from './views/TrainerView.js';
      import { init as initDebriefingView } from './views/DebriefingView.js';
      import { init as initModal } from './ui/Modal.js';
      import { init as initNotice } from './ui/Notice.js';
      import { loadFromStorage, saveToStorage } from './modules/storage.js';

      const WORKOUTS_STORAGE_KEY = 'workouts';

      const views = {
          calendar: document.getElementById('calendar-view'),
          trainer: document.getElementById('trainer-view'),
          debriefing: document.getElementById('debriefing-view'),
      };
      const initializedViews = new Set();

      function initializeApp() {
        let workouts = loadFromStorage(WORKOUTS_STORAGE_KEY);
        if (!workouts) {
          workouts = {};
          saveToStorage(WORKOUTS_STORAGE_KEY, workouts);
        }
        store.dispatch({ type: 'SET_WORKOUTS', payload: workouts });

        initCalendarView(views.calendar);
        initializedViews.add('calendar');
        initModal(document.getElementById('modal-container'));
        initNotice(document.getElementById('notice-container'));
      }

      function handleViewChange() {
        const { currentView } = store.getState();
        const newActiveViewEl = views[currentView];

        if (newActiveViewEl && newActiveViewEl.id !== store.currentActiveViewId) {
          const oldView = document.querySelector('.view--active');
          if(oldView) oldView.classList.remove('view--active');
          
          newActiveViewEl.classList.add('view--active');
          store.currentActiveViewId = newActiveViewEl.id;

          if (!initializedViews.has(currentView)) {
            if (currentView === 'trainer') initTrainerView(views.trainer);
            else if (currentView === 'debriefing') initDebriefingView(views.debriefing);
            initializedViews.add(currentView);
          }
        }
      }

      store.subscribe(handleViewChange);
      initializeApp();
commands:
  - "echo 'Azione richiesta: Applica la patch, ricarica l\\'app con un Hard Refresh (Ctrl+Shift+R o Cmd+Shift+R) e controlla la console.'"